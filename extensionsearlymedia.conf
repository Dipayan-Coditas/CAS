
; ----------------------------------------------------------------------
; general sections
; ----------------------------------------------------------------------
[general]
static=yes
writeprotect=yes
autofallthrough=yes
clearglobalvars=no

[globals]
#include ext/globals.ext

[from_outside]
exten => _[+]!X.,1,Verbose(${EXTEN})
	same => n,Macro(start-ivr)

exten => _X.,1,Verbose(${EXTEN})
	same => n,Macro(start-ivr)

; ----------------------------------------------------------------------
; PRI lines
; ----------------------------------------------------------------------

[pri-inbound]

exten => s,1,Macro(start-ivr)

; include custom DIDs
#include ext/custom-dids.ext

; include callback DIDs
#include ext/callback-dids.ext

#include ext/admin-features.ext

#include ext/sip-inbound.ext

#include ext/salesblast.ext

exten => t,1,Playback(vm-goodbye)
	same => n,Hangup()

exten => i,1,Playback(pbx-invalid)
	same => n,Hangup()

; ----------------------------------------------------------------------
; system contexts
; ----------------------------------------------------------------------
[default]
include => local-exten

[local-exten]
#include ext/local-exten.ext

[ivr]
exten => s,1,Background(thank-you-for-calling)
    same => n,Verbose(${CALLERID(num)})
	same => n,WaitExten(.65)
	same => n,Background(press-1)
	same => n,WaitExten(15)
exten => 1,1,Set(USER_TRIES=0)
    same => n(user-retry),Set(USER_TRIES=$[${USER_TRIES}+1])
    same => n,GotoIf($[ ${USER_TRIES} > 3 ]?t,1)
	same => n,Read(CASAGENT,"agent-user")
	same => n,GotoIf($[ "${CASAGENT}" == "" ]?user-retry)
    same => n,GotoIf($[ "${AGENT(${CASAGENT}:status)}" == "" ]?user-retry)
    same => n,Authenticate(${ODBC_AGENTPASSWORD(${CASAGENT})})
    same => n,AgentLogin(${CASAGENT})
    same => n,Hangup()

exten => 2,1,Hangup()
exten => 9,1,Goto(authenticate,s,1)
    same => n,Hangup()

;dsr - in sales but not prod
;exten => 77,1,Background(dir-multi1)
;	same => n,Read(DTMFRECVD)
;	same => n,Verbose(${DTMFRECVD})
;	same => n,MixMonitor(/tmp/${UNIQUEID}.${MIXMON_FORMAT})
;	same => n,Hangup()
exten => 88,1,MixMonitor(/tmp/conf99test${UNIQUEID}.wav)
	same => n,Conference(88)
	same => n,Hangup()

;dsr - in sales but not prod
;exten => 89,1,MixMonitor(/tmp/conf99test${UNIQUEID}.wav)
;	same => n,MeetMe(89)
;	same => n,Hangup()
exten => t,1,Playback(vm-goodbye)
	same => n,Hangup()
exten => i,1,Wait(1)
	same => n,Goto(s,1)
;dsr - in prod but not sales
exten => 789,1,Goto(dev-ivr,s,1)
	same => n,Hangup()
exten => h,1,GotoIf($["${CASAGENT}" > "79999"] & $["${CASAGENT}" < "90000"]?casdevs)
	same => n,Goto(agent-logoff,${CASAGENT},1)
	same => n(casdevs),Hangup()

[dev-ivr]

exten => 0,1,MixMonitor(/tmp/calltest${UNIQUEID}.wav)
	same => n,ConfBridge(99,M)
exten => s,1,WaitExten(10)

exten => 1,1,Read(dtmftest)
	same => n,Playback(auth-thankyou)
	same => n,Hangup()
exten => 0,n,Hangup()

[trim-silence]
exten => s,1,Verbose(Trimming silence on this file '${FILE_NAME}-in.wav')
    same => n,System(sox '${FILE_NAME}-in.wav' '${FILE_NAME}-temp-in.wav' silence 1 0.1 0.1% reverse silence 1 0.1 0.1% reverse)
    same => n,Verbose(moving file from '${FILE_NAME}-temp-in.wav' to '${FILE_NAME}-in.wav')
    same => n,System(mv -f '${FILE_NAME}-temp-in.wav' '${FILE_NAME}-in.wav')
    same => n,Hangup()

[remote-pri-outbound]
exten => _X.@.,1,Set(Number=${CUT(EXTEN,@,1)})
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${Number})
	
[tempinbound-1-ringing]
exten => _X.,1,Set(__IS_RINGING_ENABLED=${isRingingEnabled})
	same => n,Answer()
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
	;same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	;same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,Set(LeadTransitID=${LeadTransitID})
	same => n,Set(__IS_QUEUES_ENABLED=${UseQueues})
	same => n,UserEvent(CallAnswered,Channel: ${CHANNEL},Agent: ${EXTEN})
	same => n,GotoIf($["${RecFile}" != "" & "${CASRECON}" = ""]?:no-rec)
	same => n,Set(CASRECON=on)
	same => n(no-rec),GotoIf($["${AgentConf}" != ""]?conf)
	same => n(conf),GotoIf($["${AgentConf}" == ""]?done)
	same => n,GotoIf($["${CUT(AgentConf,@,2)}" == ""]?beep-conferences,${AgentConf},1:remote-beep-conferences-1,${AgentConf},1)
	same => n(done),Hangup()

[tempinbound-1]
exten => s,1,Answer()
    same => n,Verbose(${AgentConf})
;    same => n,GoSub(spy-channel,s,5)
    same => n,Verbose(${CHANNEL})
    same => n,Verbose(${SHARED(CH,${CHANNEL})})
    same => n,SoftHangup(${SHARED(CH,${CHANNEL})})
    same => n,Set(__IS_QUEUES_ENABLED=${UseQueues})
    same => n,ExecIf($["${RecFile}" != "" & "${CASRECON}" = ""]?Set(CASRECON=on))
    same => n,ExecIf($["${autoNavigateIVR}" == "true"]?UserEvent(AutomatedCallStarted,Channel: ${CHANNEL},Agent: ${EXTEN}))
    same => n,Set(CHANNEL(musicclass)=default)
    same => n,Verbose(Time from dial to connect a call ====>$[${EPOCH}-${dialStartTime}])
    same => n,GotoIf($[$["${UseAutoDetectVM}" == "True"]]?UseAMD:NoAMD)
    same => n(UseAMD),Set(IsAMDUsed=true)
    same => n,Gosub(gosub-detectvm,1,1)
    same => n,Goto(afterAMD)
    same => n(NoAMD),Set(IsAMDUsed=false)
    same => n(afterAMD),Verbose(RecFile ==========> ${RecFile})
    same => n,Verbose(autoNavigateIVR ==========> ${autoNavigateIVR})
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
	;same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	;same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,Set(LeadTransitID=${LeadTransitID})
    same => n,GosubIf($["${autoNavigateIVR}" == "true"]?gosub-navigateivr,1,1)
    same => n,UserEvent(CallAnswered,Channel: ${CHANNEL},Agent: ${EXTEN},ismachine:false,isamdused:${IsAMDUsed})
    same => n,GosubIf($[$["${autoNavigateIVR}" == "true"] | $["${WaitForAgentConfOnAnswer}" == "true"] | $["${UseAutoDetectVM}" == "True"]]?gosub-navigateivr,2,1)
    same => n(no-rec),GotoIf($["${AgentConf}" != ""]?conf)
    same => n(conf),GotoIf($["${AgentConf}" == ""]?done)
    same => n,GotoIf($["${CUT(AgentConf,@,2)}" == ""]?beep-conferences,${AgentConf},1:remote-beep-conferences-1,${AgentConf},1)
    same => n,UserEvent(CallEnteringConference,Channel: ${CHANNEL},Agent: ${EXTEN})
    same => n(done),Hangup()

[gosub-detectvm]
exten => 1,1,Verbose(===== Inside gosub-detectvm ==> Starting now)
        same => n,Gosub(cpa-listen,1,1)
        same => n,AMD()
        same => n,NoOp(${AMDSTATUS})
        same => n,GotoIf($[${AMDSTATUS}=HUMAN]?human)
        same => n,GotoIf($[${AMDSTATUS}!=NOTSURE]?machine:agent)
        same => n(machine),UserEvent(CallAnswered,Channel: ${CHANNEL},Agent: ${EXTEN},ismachine:true,isamdused:true)
        same => n,WaitForSilence(2300,1,50)
        ;same => n,While($[${WAITSTATUS}=TIMEOUT])
        ;same => n,WaitForSilence(800,2,2)
        ;same => n,EndWhile()
        same => n,Verbose(====== Detected a call as mechine ======== drop vm file name ${VMFileName}-in ===)
        same => n,ExecIf($["${VMFileName}" != ""],Playback,${VMFileName}-in)
        same => n,Hangup()
        same => n(human),UserEvent(CallAnswered,Channel: ${CHANNEL},Agent: ${EXTEN},ismachine:false,isamdused:${IsAMDUsed})
        same => n,GotoIf($["${greetingFileName}" == ""]?beep-conferences,${PitcherConf},1:greet-conferences,${PitcherConf},1)
        same => n(agent),Set(IsAMDUsed=false)
        same => n,Return()

[cpa-listen]
exten => 1,1,Verbose(Inside Call progress analyser)
        same => n,Set(CPASTATUS=Silence)
        same => n,While($["${CPASTATUS}" != "Talking"])
        same => n,Wait(.25)
        same => n,CPA(240,5000)
        same => n,NoOp(**************** CPA Status is: ${CPASTATUS} *************************)
        ;same => n,NoOp(CPASTATUS not equal to Talking is: $["${CPASTATUS}" != "Talking"])
        same => n,EndWhile
        same => n,Return()

[gosub-navigateivr]
exten => 1,1,Verbose(===== Inside gosub-navigateivr ==> Navigate IVR)
		same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
		;same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
		;same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
        same => n,Set(noiserequired=500)
        same => n,Set(noiseiterations=1)
        same => n,Set(noisetimeout=5)
        same => n,Set(dtmftimeout=500)
        same => n,Set(dtmfduration=250)
        same => n,Verbose(contactExtension ==> ${contactExtension})
        same => n,Verbose(companyIVR ==> ${companyIVR})
        same => n,Verbose(fnlnIVR ==> ${fnlnIVR})
        same => n,Verbose(contactIVR ==> ${contactIVR})
        same => n,Verbose(additionalIVR ==> ${additionalIVR})

        same => n,ExecIf($["${contactExtension}" != ""]?WaitForNoise(${noiserequired},${noiseiterations},${noisetimeout}))
        same => n,ExecIf($["${contactExtension}" != ""]?SendDTMF(${contactExtension},${dtmftimeout},${dtmfduration},${CHANNEL}))
        same => n,ExecIf($["${contactExtension}" != ""]?Verbose(========== contactExtension navigated==========))
        same => n,ExecIf($["${companyIVR}" != ""]?WaitForNoise(${noiserequired},${noiseiterations},${noisetimeout}))
        same => n,ExecIf($["${companyIVR}" != ""]?SendDTMF(${companyIVR},${dtmftimeout},${dtmfduration},${CHANNEL}))
        same => n,ExecIf($["${companyIVR}" != ""]?Verbose(========== companyIVR navigated==========))
        same => n,ExecIf($["${fnlnIVR}" != ""]?WaitForNoise(${noiserequired},${noiseiterations},${noisetimeout}))
        same => n,ExecIf($["${fnlnIVR}" != ""]?SendDTMF(${fnlnIVR},${dtmftimeout},${dtmfduration},${CHANNEL}))
        same => n,ExecIf($["${fnlnIVR}" != ""]?Verbose(========== fnlnIVR navigated==========))
        same => n,ExecIf($["${contactIVR}" != ""]?WaitForNoise(${noiserequired},${noiseiterations},${noisetimeout}))
        same => n,ExecIf($["${contactIVR}" != ""]?SendDTMF(${contactIVR},${dtmftimeout},${dtmfduration},${CHANNEL}))
        same => n,ExecIf($["${contactIVR}" != ""]?Verbose(========== contactIVR navigated==========))
        same => n,ExecIf($["${additionalIVR}" != ""]?WaitForNoise(${noiserequired},${noiseiterations},${noisetimeout}))
        same => n,ExecIf($["${additionalIVR}" != ""]?SendDTMF(${additionalIVR},${dtmftimeout},${dtmfduration},${CHANNEL}))
        same => n,ExecIf($["${additionalIVR}" != ""]?Verbose(========== additionalIVR navigated==========))
        same => n,Verbose(================Call connecting to agent now!!!!=====================)
        same => n,Return()

 exten => 2,1,Verbose(===== Inside gosub-navigateivr ==> Wait for agentconf)
        same => n,Set(TRIES=0)
        same => n,While($[$["${AgentConf}" == ""] & $[${TRIES} <= 25]])
        same => n,Verbose(Witing for agentconf for channel===${CHANNEL})
        same => n,Wait(.2)
        same => n,Set(TRIES=$[${TRIES}+1])
        same => n,EndWhile()
        same => n,Return()

[engine-outbound-x]

[engine-outbound-1]
exten => _X.,1,Set(CARRIER=MAIN)
    same => n,Set(Number=${IF($[ "${isRingingEnabled}" != "true"]?${CUT(EXTEN,,2)}:${EXTEN})})
    same => n,UserEvent(CallStarted,Channel: ${CHANNEL},Agent: ${EXTEN})
    same => n,Verbose(${UseAutoDetectVM})
    same => n,Verbose(${Number})
    same => n,ExecIf($["${enableRecording}" == "0"]?Set(PJSIP_HEADER(add,X-VoipMonitor-norecord)=yes))
    ;same => n,ExecIf($[$["${useLocalTouch}" = "True"] & $["${Number:0:3}" != "011"]]?Set(PJSIP_HEADER(add,X-LocalTouch)=Yes):Set(PJSIP_HEADER(add,X-LocalTouch)=No)
    same => n,Set(CHANNEL(musicclass)=default)
    same => n,set(_dialtime=${EPOCH})

;;;;;;;;;;;;;;;;;;;;;;;;;;;; added by nitesh for evaluating XCast 
   ; same => n,Dial(PJSIP/000${Number}@Xo_main,45,b(handler^addheader^1[(${LocalTouchKey},${Number})]),${IF($[ "${isRingingEnabled}" == "true"]?U(gosub-dialer-ringing-events^${CHANNEL}^${AgentConf}):"")})
   ; same => n,Verbose(Dial Status: ${DIALSTATUS})
   ; same => n,Goto(dialstatus,s-${DIALSTATUS},1)
   ; same => n(secondary),Set(CARRIER=SECOND/FAILED) ;;tfunk - removed 2nd proxy
;;;;;;;;;;;;;;;;;;;;; fail safe if xcast fails go normal
    
    same => n,Dial(PJSIP/${Number}@Xo_main,45,b(handler^addheader^1[(${LocalTouchKey},${Number})]),${IF($[ "${isRingingEnabled}" == "true"]?U(gosub-dialer-ringing-events^${CHANNEL}^${AgentConf}):"")})
    same => n,Verbose(Dial Status: ${DIALSTATUS})
    same => n,Goto(dialstatus,s-${DIALSTATUS},1)
    same => n(secondary),Set(CARRIER=SECOND/FAILED) ;;tfunk - removed 2nd proxy

    same => n,Hangup()

[handler]
exten => addheader,1,Verbose(=======${ARG1}==========${ARG2}==========)
	same =>n,GotoIf($["${ARG2:0:3}" != "011"]?lt_yes:lt_no)
	same =>n(lt_yes),Set(PJSIP_HEADER(add,X-LocalTouch)=${ARG1})
    same =>n,Return()
	same =>n(lt_no),Set(PJSIP_HEADER(add,X-LocalTouch)=0)
	same =>n,Return()

[gosub-dialer-ringing-events]
exten => s,1,UserEvent(CallAnswered,Channel: ${ARG1},Agent: ${ARG2})
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
	same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,UserEvent(CallEnteringConference,Channel: ${ARG1},Agent: ${ARG2})
	same => n,Return()

[dialstatus]
exten => s-ANSWER,1,Log(NOTICE ,${Number} answered)
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
exten => s-BUSY,1,Log(WARNING, ${Number} busy)
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
exten => s-NOANSWER,1,Log(WARNING, dial timeout ${Number} never answered)
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
exten => s-CONGESTION,1,Log(NOTICE, ${DIALSTATUS}:Failed on Proxy Attempt, attempting next)
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,GotoIf($["${CARRIER}" = "MAIN"]?secondary)
	same => n(secondary),Goto(engine-outbound-1,${Code},secondary)
	same => n,GotoIf($["${CARRIER}" = "SECOND"]?fail)
	same => n,(fail),Goto(engine-outbound-1,${Code},fail)
	same => n,Hangup()
exten => s-CHANUNAVAIL,1,Log(NOTICE, ${DIALSTATUS}:Failed on Proxy Attempt, attempting next)
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,Hangup()

exten => _X.,n,Hangup()

[engine-callme]
exten => _X.,1,set(Code=${EXTEN})
	same => n,Set(Number=${CUT(EXTEN,,2)})
	same => n,UserEvent(CallStarted,Channel: ${CHANNEL},Agent: ${EXTEN})
	same => n,Verbose(${Number})
	same => n,Dial(PJSIP/${Number}@Xo_main,45,)
	same => n,Verbose(Dial Status: ${DIALSTATUS})
	same => n,Goto(s-${DIALSTATUS},1)
	same => n,Hangup()
exten => s-ANSWER,1,Log(NOTICE ,${Number} answered)
exten => s-BUSY,1,Log(WARNING, ${Number} busy)
exten => s-NOANSWER,1,Log(WARNING, dial timeout ${Number} never answered)

[engine-outbound]
exten => _X.,1,Dial(Local/15109332912@pri-inbound)
	same => n,Set(Number=${EXTEN})
	same => n,Verbose(Dial Status: ${DIALSTATUS})
	same => n,Goto(s-${DIALSTATUS},1)
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
    same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
exten => s-ANSWER,1,Log(NOTICE ,${Number} answered)
exten => s-BUSY,1,Log(NOTICE, ${Number} busy)
exten => s-NOANSWER,1,Log(NOTICE, dial timeout ${Number} never answered)

exten => s-CONGESTION,1,Log(NOTICE, ${DIALSTATUS}:) 
	same => n,Hangup()
exten => s-CHANUNAVAIL,1,Log(NOTICE, ${DIALSTATUS}:)
	same => n,Hangup()

[agents]
include => local-agents

exten => _X.,1,System(/usr/sbin/asterisk -rx "ConfBridge kick ${EXTEN} all")
	same => n,UserEvent(AgentJoinedConference, AgentId: ${EXTEN})
	same => n,Goto(agent-request,${EXTEN},1)
	same => n,Hangup()

[agent-logoff]
exten => _X.,1,Verbose(Logging off Agnet No. ${EXTEN})
	same => n,System(/usr/sbin/asterisk -rx "ConfBridge kick ${EXTEN} all")
	same => n,System(/usr/sbin/asterisk -rx "agent logoff ${EXTEN}")
	same => n,Hangup()

[agent-request]
exten => _X.,1,GotoIf($[$["${${EXTEN}IsBeingSpied}" == "1"] & $["${${EXTEN}ChannelName}" != "0"]]?spyhangup:request)
	same => n(spyhangup),SoftHangup(${${EXTEN}ChannelName})
	same => n,Set(GLOBAL(${EXTEN}ChannelName)="")
	same => n,Set(CHANNEL(hangup_handler_push)=agent-request-coach-generate,${EXTEN},1)
	same => n(request),AgentRequest(${EXTEN})
	same => n,Verbose(${EXTEN} AGENT_STATUS is ${AGENT_STATUS})
	;dsr - wait over 5 second is required after AgentLogin due to this bug: https://issues.asterisk.org/jira/browse/ASTERISK-23259
    same => n,Set(TRIES=0)
 ;   same => n,GoSub(spy-channel,s,5)
    same => n,While($[$["${AGENT_STATUS}" != ""] & $[${TRIES} <= 11]])
    ;same => n,If((${TRIES} == 6)?Verbose($CHANNEL}):Verbose($CH}))
    same => n,Verbose(Witing for AgentRequest for Agent=${EXTEN})
    same => n,Wait(1)
    same => n,AgentRequest(${EXTEN})
    same => n,Set(TRIES=$[${TRIES}+1])
    same => n,EndWhile()
    same => n,GotoIf($["${AGENT_STATUS}" != ""]?logoff)
    same => n(logoff),Goto(agent-logoff,${EXTEN},1)
	same => n,Hangup()

[agent-request-coach]
exten => _X.,1,Set(GLOBAL(${EXTEN}ChannelName)=${CHANNEL})
	same => n,ExecIf($["${${EXTEN}IsBeingSpied}" == "1"]?AgentRequest(${EXTEN}))
	same => n,Hangup()

[agent-request-coach-generate]
exten => _X.,1,Originate(LOCAL/${EXTEN}@agent-request-coach/n,exten,wait-call,s,1)
	same => n,Return()


[local-agents]
exten => _aX.,1,Dial(Agent/${EXTEN:1})

[remote-agents]
exten => _a.@.,1,Set(AgentId=${CUT(EXTEN,@,1)})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${AgentId})

[login-agents]
exten => _X.,1,Wait(3)
	same => n,Set(CASAGENT=${EXTEN})
	same => n,Verbose(${ODBC_AGENTPASSWORD(${CASAGENT})})
	same => n,Authenticate(${ODBC_AGENTPASSWORD(${CASAGENT})})
	same => n,AgentLogin(${CASAGENT})
	same => n,Verbose(${CASAGENT} AGENT_STATUS is ${AGENT_STATUS})
	same => n,Hangup()

;dsr - not in prod
exten => h,1,GotoIf($["${CASAGENT}" > "79999"] & $["${CASAGENT}" < "90000"]?casdevs)
	same => n,Goto(agent-logoff,${CASAGENT},1)
	same => n(casdevs),Hangup()

[conferences]
include => local-conferences

exten => _X,1,ExecIf($["${IS_RINGING_ENABLED}" != "true"],UserEvent,CallEnteringConference,Channel: ${CHANNEL},Agent: ${EXTEN}))
	same => n,Goto(direct-conferences,${EXTEN},1)

exten => _X.,1,ExecIf($["${IS_RINGING_ENABLED}" != "true"],UserEvent,CallEnteringConference,Channel: ${CHANNEL},Agent: ${EXTEN}))
	same => n,Goto(direct-conferences,${EXTEN},1)

[local-conferences]
exten => _cX,1,ExecIf($["${IS_RINGING_ENABLED}" != "true"],UserEvent,CallEnteringConference,Channel: ${CHANNEL},Agent: ${EXTEN}))
	same => n,Goto(direct-conferences,${EXTEN},1)

exten => _cX.,1,ExecIf($["${IS_RINGING_ENABLED}" != "true"],UserEvent,CallEnteringConference,Channel: ${CHANNEL},Agent: ${EXTEN}))
	same => n,Goto(direct-conferences,${EXTEN},1)

[direct-conferences]
exten => _X,1,ConfBridge(${EXTEN})
       same => n,Hangup()
exten => _X.,1,ConfBridge(${EXTEN})
	same => n,Hangup()

[remote-conferences]
exten => _X.@.,1,Set(ConfId=${CUT(EXTEN,@,1)})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${ConfId}@conferences)

[remote-beep-conferences]
exten => _X.@.,1,Set(ConfId=${CUT(EXTEN,@,1)})
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
	same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${ConfId}@beep-conferences)

[remote-beep-conferences-1]
exten => _X.@.,1,Set(ConfId=${CUT(EXTEN,@,1)})
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
	same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${ConfId}@localize-beep-1)

[remote-greet-conferences]
exten => _X.@.,1,Set(ConfId=${CUT(EXTEN,@,1)})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${ConfId}@greet-conferences)

[remote-greet-conferences-1]
exten => _X.@.,1,Set(ConfId=${CUT(EXTEN,@,1)})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${ConfId}@localize-greet-1)

[play-file]
; the wait is necessary to avoid warnings in the log file
; it looks like the call is still being set up
exten => s,1,Wait(.001)
	same => n,Playback(${SOUND_FILE})
	same => n,Hangup()

[remote-drop-voicemail]
exten => _X.@.,1,Set(ConfId=${CUT(EXTEN,@,1)})
	same => n,Set(Server=${CUT(EXTEN,@,2)})
	same => n,Dial(${IAX2_PREFIX}@${Server}/${ConfId}@drop-voicemail)

[drop-voicemail]
exten => _X.,1,Playback(${voicemailFileName}-in)
	same => n,Hangup()

[cas-conferences]
exten => s,1,Set(NumAttempts=0)
	same => n,Background(conf-getconfno)
	same => n(repeat),WaitExten(5)
exten => i,1,Set(NumAttempts=$[${NumAttempts}+1])
	same => n,GotoIf($[${NumAttempts}>2]?t,1)
	same => n,Background(conf-invalid)
	same => n,Goto(s,repeat)

exten => t,1,Playback(vm-goodbye)
	same => n,Hangup()

[monitor-conferences]
exten => _X.,1,Set(CONFBRIDGE(user,template)=default_user)
	same => n,Set(CONFBRIDGE(user,startmuted)=yes)
	same => n,Verbose(The coach_id=${COACH_ID} and agent_id=${EXTEN})
	same => n,Verbose(Coaching channel ==> ${CHANNEL})
	same => n,UserEvent(CoachJoinedConference,CoachId: ${COACH_ID})
	same => n,ConfBridge(${EXTEN})
	same => n,Hangup()

[listen-call]
exten => _X.,1,Answer()
	same => n,UserEvent(CoachJoinedConference,CoachId: ${COACH_ID})
	same => n,ChanSpy(${AGENT(${EXTEN}:fullchannel)},${COACH_ACTION})
	same => n,Hangup()

[barge-call]
exten => _X.,1,Answer()
	same => n,ChanSpy(${AGENT(${EXTEN}:fullchannel)},qw)
	same => n,Hangup()

[admin-barge-call]
exten => _X.,1,Answer()
	same => n,Set(GLOBAL(${EXTEN}IsBeingSpied)=1)
	same => n,Originate(LOCAL/${EXTEN}@agent-request-coach/n,exten,wait-call,s,1)
	same => n,ChanSpy(${AGENT(${EXTEN}:fullchannel)},qw)
	same => n,Hangup()

[wait-call]
exten => s,1,Wait(8640000)
	same => n,Hangup()

[barge-conf]
exten => _X.,1,ConfBridge(${EXTEN}) ;dsr - FIXME: test if this works

[play-beep]
exten => s,1,Wait(0.5)
	same => n,Playback(en/beep)
	same => n,Hangup()

[localize-beep-1]
exten => _X.,1,Dial(Local/${EXTEN}@incoming-beep-1/n)

[incoming-beep-1]
exten => _X.,1,Set(AgentNo=${CUT(EXTEN,-,3)})
	same => n,Goto(beep-conferences,${AgentNo},1)

[localize-greet-1]
exten => _X.,1,Dial(Local/${EXTEN}@incoming-greet-1/n)

[incoming-greet-1]
exten => _X.,1,Set(AgentNo=${CUT(EXTEN,-,3)})
	same => n,Goto(greet-conferences,${AgentNo},1)

[beep-conferences]
exten => _X.,1,Set(TARGET_AGENT=${EXTEN})
	same => n,Verbose(================> Received LeadTransitID: ${LeadTransitID}== UniqueId: ${UNIQUEID})
	same => n,Set(PJSIP_HEADER(add,X-LeadTransitID)=${LeadTransitID})
	same => n,Set(PJSIP_HEADER(add,X-UniqueId)=${UNIQUEID})
	same => n,GotoIf($["${IS_QUEUES_ENABLED}" == "True"]?agentreq:confbridge)
	same => n,Hangup()

    same => n(agentreq),Set(LIMIT_CONNECT_FILE=cas-beep)
    same => n,Set(LIMIT_PLAYAUDIO_CALLER=no)
	same => n,Set(LIMIT_PLAYAUDIO_CALLEE=yes)
    same => n,UserEvent(CallEnteringConference, Channel:${CHANNEL}, Agent:${TARGET_AGENT}, DialedPhoneNumber:${DialedPhoneNumber})
    same => n,GotoIf($["${${TARGET_AGENT}IsBeingSpied}" == "1"]?spyhangup:request)
	same => n(spyhangup),SoftHangup(${${TARGET_AGENT}ChannelName})
	same => n,Set(GLOBAL(${TARGET_AGENT}ChannelName)=0)
	same => n,Set(CHANNEL(hangup_handler_push)=agent-request-coach-generate,${TARGET_AGENT},1)
	same => n(request),Dial(Local/${TARGET_AGENT}@agent-request,,m(default)L(${MILLI_SECONDS_IN_DAY}:1:1))
	same => n,Hangup()

    same => n(confbridge),Dial(Local/${TARGET_AGENT}@direct-conferences,,G(call-splitter^s^1)))
    same => n,Hangup()

[call-splitter]
exten => s,1,Goto(1,1); us
	same => 2,Goto(2,1); dialed number

; calling party (outgoing call - decision maker)
exten => 1,1,GotoIf($["${RecFile}" != "" & "${CASRECON}" = ""]?:no-rec)
	same => n,Set(CASRECON=on)
	same => n(no-rec),Wait(0.100)
	same => n,Goto(conferences,${TARGET_AGENT},1)

; called party (agent's conference)
exten => 2,1,Wait(0.001)
	same => n,Playback(cas-beep)
	same => n,Hangup()

[greet-conferences]
exten => _X.,1,Set(TARGET_AGENT=${EXTEN})
	same => n,Set(__GREETING_FILENAME=${greetingFileName}-in)
	same => n,GotoIf($["${IS_QUEUES_ENABLED}" == "True"]?agentreq:confbridge)
	same => n,Hangup()

    same => n(agentreq),Set(LIMIT_CONNECT_FILE=${GREETING_FILENAME})
    same => n,Set(LIMIT_PLAYAUDIO_CALLER=yes)
    same => n,Set(LIMIT_PLAYAUDIO_CALLEE=yes)
    same => n,UserEvent(CallEnteringConference, Channel:${CHANNEL}, Agent:${TARGET_AGENT})
	same => n,GotoIf($["${${TARGET_AGENT}IsBeingSpied}" == "1"]?spyhangup:request)
	same => n(spyhangup),SoftHangup(${${TARGET_AGENT}ChannelName})
	same => n,Set(GLOBAL(${TARGET_AGENT}ChannelName)=0)
	same => n,Set(CHANNEL(hangup_handler_push)=agent-request-coach-generate,${TARGET_AGENT},1)
	same => n(request),Dial(Local/${TARGET_AGENT}@agent-request,,L(${MILLI_SECONDS_IN_DAY}:1:1))
	same => n,Hangup()

    same => n(confbridge),Dial(Local/${TARGET_AGENT}@direct-conferences,,G(greet-splitter^${TARGET_AGENT}^1))
	same => n,Hangup()

[greet-splitter]
exten => _X.,1,Goto(conferences,${EXTEN},1); calling party (outgoing call - decision maker)
	same => 2,Wait(0.001) ; called party - the pitcher's conference
	same => n,Playback(${GREETING_FILENAME})
	same => n,Hangup()

[login-test-agent]
exten => _X.,1,Wait(2)
	same => 2,SendDTMF(${EXTEN})
	same => 3,Goto(test-calls,15109332912,1)

[test-calls]
exten => 5711,1,Dial(SIP/gg_poly1&SIP/gg_poly2)
	same => n,Hangup()
exten => 15109332912,1,Answer()
	same => n(play),Playback(cas-beep)
	same => n,Wait(3000)
	same => n,Goto(test-calls,15109332912,1)
exten => _X.,n,Hangup()

[iaxtrunk]
include => test-calls
include => ivr
include => conferences
include => beep-conferences

[siptrunk]
include => local-agents
include => local-conferences

[outgoing]
exten => _107X,1,Dial(SIP/${EXTEN}@vb-cas)
[testpoint1]
exten => s,1,Wait(2)
	same => n,SendDTMF(7w2)
	same => n,Hangup

[amitest]
exten => s,1,Wait(2)
	same => n,Background(press-1)
	same => n,WaitExten(15)
exten => 1,1,Playback(digits/1)
	same => n,Wait(1)
	same => n,Playback(digits/2)
	same => n,Wait(1)
	same => n,Playback(digits/3)
	same => n,Wait(1)
	same => n,Playback(digits/4)
	same => n,Wait(1)
	same => n,Playback(digits/5)
	same => n,Wait(1)
	same => n,Playback(digits/6)
	same => n,Wait(1)
	same => n,Playback(digits/7)
	same => n,Wait(1)
	same => n,Playback(digits/8)
	same => n,Wait(1)
	same => n,Playback(digits/9)
	same => n,Wait(1)
	same => n,Playback(digits/10)
	same => n,Wait(1)
	same => n,Playback(vm-goodbye)
	same => n,Hangup()

[hold-call]
exten => s,1,Set(CHANNEL(musicclass)=new_moh)
        same => n,BridgeWait()
        same => n,Set(CHANNEL(musicclass)=default)
        same => n,Hangup()


[bridge-channel]
exten => s,1,Wait(1)
	same => n,Verbose(${TargetChannel})
	same => n,GotoIf($["${TargetChannel}" == ""]?done)
	same => n,Bridge(${TargetChannel})
	same => n(done),Hangup()

[join-conference]
exten => _X.,1,Set(TargetConf=${EXTEN})
	same => n,Verbose(${TargetConf})
	same => n,Confbridge(${TargetConf})
	same => n,Hangup()

[conference-agent-request]
exten => _X.,1,Answer()
	same => n,Verbose(${EXTEN})
	same => n,Goto(agent-request,${EXTEN},1)
	same => n,Hangup()


; ----------------------------------------------------------------------
; macros
; ----------------------------------------------------------------------
[macro-start-ivr]
exten => s,1,Answer()
	same => n,Wait(1)
	same => n,Goto(ivr,s,1)

[macro-callback]
exten => s,1,Ringing()
	same => n,Wait(10)
	same => n,Hangup()

; ----------------------------------------------------------------------
; individual user contexts
; ----------------------------------------------------------------------

[from-opensips]
exten => _X.,1,Ringing()
exten => _X.,n,Wait(4)
exten => _X.,n,Answer()
exten => _X.,n,Wait(1)
exten => _X.,n,Playback(vm-intro)
exten => _X.,n,Echo()
#include ext/user-contexts.ext



[login-agent-remote]
exten => _X.,1,Wait(3)
        same => n,Set(Fromenv=${PJSIP_HEADER(read,FromEnvironment)})
	same => n,Set(Toenv=${PJSIP_HEADER(read,ToEnvironment)})
	same => n,Verbose(-----${Fromenv}-----${Toenv}---)
	same => n,Set(CASAGENT=${EXTEN})
        same => n,Verbose(Agent transferred from ${EXTEN:6})
        same => n,AgentLogin(${CASAGENT})
        same => n,Verbose(${CASAGENT} AGENT_STATUS is ${AGENT_STATUS})
        same => n,Hangup()

[agent-remote-transfer]
exten => _X.,1,Verbose(Transferring Agent - ${EXTEN} to ${ToEnviornment})
	same => n,Set(Env=${ToEnvironment})
	same => n,Set(Number=${EXTEN})
;	same => n,Dial(PJSIP/${Number}@${Env},,b(tranferhandler^addheader^1[($(FromEnvironment),$(ToEnvironment))]))
	same => n,Dial(PJSIP/${Number}@Sandbox,,b(tranferhandler^addheader^1[($(FromEnvironment),$(ToEnvironment))]))
same => n,Verbose(Dial Status: ${DIALSTATUS})
	same => n,Hangup()

[transferhandler]
exten => addheader,1,Verbose(-------${FromEnvironment}----------${ToEnvironment})
	same => n,Set(PJSIP_HEADER(add,X-FromEnvironment)=${FromEnvironment})
	same => n,Set(PJSIP_HEADER(add,X-ToEnvironment)=${ToEnvironment})
	same => n,Return()

[spy-channel]
exten => s,1,Answer()
     same => n,Set(_CHA=${CHANNEL})
     same => n,Set(SHARED(CH,${SPY_ON_CHANNEL})=${CHANNEL})
     ;same => n,Verbose(${CH})
    ; same => n,SHARED(CH,${SPY_ON_CHANNEL})
     same => n,ChanSpy(${SPY_ON_CHANNEL},qwE)
     same => n,Verbose(${CHA})
     same => n,Verbose(${CHANNEL})
     same => n,SoftHangup(${CHA})
     same => n,Return()
